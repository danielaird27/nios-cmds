var1=$1


if [ "$var1" == "h" ]
then
    echo " == release Sub-Commands ==
        h:          opens the "release" help menu
        reset:      resets the NiosVersion to 0
    "
else
    echo Turning off debug mode for BSP and HsMain
    cd Embedded/HsMain_bsp
    nios2-bsp-update-settings.exe --settings settings.bsp --set hal.make.bsp_cflags_debug ""
    stty sane
    nios2-bsp-generate-files.exe --bsp-dir . --settings settings.bsp
    stty sane
    cd ../HsMain
    nios2-app-update-makefile.exe --app-dir . --build-config default --set-debug-level=""
    stty sane

    # Making modification to public.mk
    cd ../HsMain_bsp
    sed -i 's/ALT_CPPFLAGS += -DRSU_PROTECTION_SLOT=none/#ALT_CPPFLAGS += -DRSU_PROTECTION_SLOT=none/' public.mk

    cd ../HsMain

    echo Incrementing NIOS version
    origVersion=$(awk '/#define NIOS_VERSION/ {print $3}' Drivers/HsNiosVersion.h)
    echo Org version: $origVersion

    version=${origVersion:2:4}

    if [ "$var1" == "reset" ]
    then
        newVersion=0
    else
        newVersion=$(($version+1))
    fi

    newVersion=$(printf "0x%04x" $newVersion)
    echo New version: $newVersion

    $(sed -i "s/#define NIOS_VERSION $origVersion/#define NIOS_VERSION $newVersion\r/" Drivers/HsNiosVersion.h) # Need the carriage return for Windows

    echo Generating hex
    make mem_init_generate
    stty sane

    echo Turning debug mode back on for BSP and HsMain
    cd ../HsMain_bsp
    nios2-bsp-update-settings.exe --settings settings.bsp --set hal.make.bsp_cflags_debug -g
    stty sane
    nios2-bsp-generate-files.exe --bsp-dir . --settings settings.bsp
    stty sane
    cd ../HsMain
    nios2-app-update-makefile.exe --app-dir . --build-config default --set-debug-level -g
    stty sane

    # Making modification to public.mk
    cd ../HsMain_bsp
    sed -i 's/ALT_CPPFLAGS += -DRSU_PROTECTION_SLOT=none/#ALT_CPPFLAGS += -DRSU_PROTECTION_SLOT=none/' public.mk

    echo Copying hex to build folder
    cd ../HsMain
    cp mem_init/OnchipMemRam.hex ../../build
    stty sane
fi
